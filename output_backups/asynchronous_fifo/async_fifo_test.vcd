$date
	Wed Jul 23 11:43:21 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module AsynchronousFIFO_tb $end
$var wire 1 ! wr_rdy $end
$var wire 1 " rd_rdy $end
$var wire 1 # full $end
$var wire 1 $ empty $end
$var wire 32 % dout [31:0] $end
$var reg 1 & CLK_RD $end
$var reg 1 ' CLK_WR $end
$var reg 32 ( din [31:0] $end
$var reg 32 ) expected_output [31:0] $end
$var reg 1 * rd_en $end
$var reg 1 + wr_en $end
$var integer 32 , mismatch_count [31:0] $end
$scope module dut $end
$var wire 1 & CLK_RD $end
$var wire 1 ' CLK_WR $end
$var wire 32 - din [31:0] $end
$var wire 1 * rd_en $end
$var wire 1 + wr_en $end
$var wire 1 ! wr_rdy $end
$var wire 1 " rd_rdy $end
$var wire 1 # full $end
$var wire 1 $ empty $end
$var parameter 32 . DEPTH $end
$var reg 32 / dout [31:0] $end
$var reg 1 0 empty_reg $end
$var reg 1 1 full_reg $end
$var reg 3 2 rd_ptr [2:0] $end
$var reg 3 3 rd_ptr_sync [2:0] $end
$var reg 3 4 wr_ptr [2:0] $end
$var reg 3 5 wr_ptr_sync [2:0] $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 6 i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop1 $end
$var integer 32 7 i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1000 .
$end
#0
$dumpvars
b0 7
b0 6
bx 5
bx 4
bx 3
bx 2
x1
x0
bx /
b0 -
b0 ,
0+
0*
b0 )
b0 (
0'
0&
bx %
x$
x#
x"
x!
$end
#5
10
01
b0 4
1+
1'
#7
b0 2
b0 5
1&
#10
0'
#14
0&
#15
1!
0#
0"
1$
b0 3
b0 4
b1 6
0+
1'
#20
0'
#21
1&
#25
b0 4
1+
b1 (
b1 -
1'
#28
0&
#30
0'
#35
b1 4
b10 6
0+
1'
1&
#40
0'
#42
0&
#45
b0 4
1+
b10 (
b10 -
1'
#49
1&
#50
0'
#55
b0 4
b11 6
0+
1'
#56
0&
#60
0'
#63
1&
#65
b0 4
1+
b11 (
b11 -
1'
#70
0'
0&
#75
b0 4
b100 6
0+
1'
#77
1&
#80
0'
#84
0&
#85
b0 4
1+
b100 (
b100 -
1'
#90
0'
#91
1&
#95
b0 4
b101 6
0+
1'
#98
0&
#100
0'
#105
b1 4
1+
b101 (
b101 -
1'
1&
#110
0'
#112
0&
#115
b0 4
b110 6
0+
1'
#119
1&
#120
0'
#125
b0 4
1+
b110 (
b110 -
1'
#126
0&
#130
0'
#133
1&
#135
b0 4
b111 6
0+
1'
#140
0'
0&
#145
b0 4
1+
b111 (
b111 -
1'
#147
1&
#150
0'
#154
0&
#155
b0 4
b1000 6
0+
1'
#160
0'
#161
1&
#165
1'
#168
0&
#170
0'
#175
1*
1'
1&
#180
0'
#182
0&
#185
1'
#189
0*
1&
#190
0'
#195
1'
#196
b1 7
b1 ,
0&
#200
0'
#203
b1 )
1*
1&
#205
1'
#210
0'
0&
#215
1'
#217
0*
1&
#220
0'
#224
b10 7
b10 ,
0&
#225
1'
#230
0'
#231
b10 )
1*
1&
#235
1'
#238
0&
#240
0'
#245
0*
1'
1&
#250
0'
#252
b11 7
b11 ,
0&
#255
1'
#259
b11 )
1*
1&
#260
0'
#265
1'
#266
0&
#270
0'
#273
0*
1&
#275
1'
#280
b100 7
b100 ,
0'
0&
#285
1'
#287
b100 )
1*
1&
#290
0'
#294
0&
#295
1'
#300
0'
#301
0*
1&
#305
1'
#308
b101 7
b101 ,
0&
#310
0'
#315
b101 )
1*
1'
1&
#320
0'
#322
0&
#325
1'
#329
0*
1&
#330
0'
#335
1'
#336
b110 7
b110 ,
0&
#340
0'
#343
b110 )
1*
1&
#345
1'
#350
0'
0&
#355
1'
#357
0*
1&
#360
0'
#364
b111 7
b111 ,
0&
#365
1'
#370
0'
#371
b111 )
1*
1&
#375
1'
#378
0&
#380
0'
#385
0*
1'
1&
#390
0'
#392
b1000 7
b1000 ,
0&
#395
1'
#399
1&
#400
0'
#405
1'
#406
0&
#410
0'
#412
